[package]
name = "web-library-base-compositions"
version = "0.1.0"
authors = ["Kartavya Vashishtha <kartavya0703@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.50"
web-sys = { version = "0.3.51", features = ["File", "Blob", "FileReaderSync"] }
gloo = "0.2.1"
wasm-bindgen = "0.2.63"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_off"] }
simple_logger = "1.9.0"
regex = "1"
flate2 = "1.0.20"
lazy_static = "1.4.0" # Useful for global Regex check
serde = { version = "1.0", features = ["derive"] } 
serde_json = "1.0"
reservoir-sampling = "0.5.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
